version: '3.9'
services:
  djangoserver:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    ports:
      - '8000:8000'
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    depends_on:
      - db
    environment:
      - DEBUG=0
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - CORS_ALLOWED_ORIGINS=${DJANGO_CORS_ALLOWED_ORIGINS}
      - CORS_ALLOW_ALL_ORIGINS=${DJANGO_CORS_ALLOW_ALL_ORIGINS}
      - DB_HOST=db
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_PORT=${POSTGRES_PORT}
      - TIME_ZONE=${DJANGO_TIME_ZONE}
  reactclient:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.prod
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
      - dist_volume:/frontend/dist
    ports:
      - 5173:5173
    stdin_open: true
    depends_on:
      - djangoserver
  db:
    image: postgres:15
    volumes:
      - ./data/db:/var/lib/postgresql/data
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    expose:
      - '${POSTGRES_PORT}'
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    command: -p ${POSTGRES_PORT}
  nginx:
    build: ./nginx
    restart: always
    ports:
      - 80:80
      - 433:433
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
      - dist_volume:/frontend/dist
    depends_on:
      - djangoserver
      - reactclient

volumes:
  static_volume:
  media_volume:
  dist_volume:
